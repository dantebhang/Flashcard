{"version":3,"sources":["utils/api/index.js","Deck/List.js","Layout/Home/index.js","Deck/Study/StudyCard.js","Deck/Study/StudyPage.js","Deck/Study/StudyNotEnoughCards.js","Deck/Study/Index.js","Layout/NotFound.js","Layout/Header.js","Deck/Form.js","Deck/Edit.js","Card/List.js","Deck/View.js","Card/Form.js","Card/Edit.js","Card/Create.js","Deck/Create.js","Layout/index.js","App.js","index.js"],"names":["API_BASE_URL","process","headers","Headers","stripCards","deck","cards","fetchJson","url","options","onCancel","a","fetch","response","status","Error","statusText","json","name","console","error","stack","Promise","resolve","signal","method","body","JSON","stringify","readDeck","deckId","updatedDeck","id","deleteDeck","card","Number","cardId","updatedCard","append","DeckList","useState","decks","setDecks","loadDecks","listDecks","then","useEffect","list","map","className","length","description","to","title","onClick","window","confirm","Home","nextView","front","back","StudyCard","children","view","setView","flipped","setFlipped","type","prevState","StudyPage","StudyNotEnoughCards","cardCount","Study","useParams","setDeck","cardNumber","setCardNumber","history","useHistory","cardTitle","push","Math","min","NotFound","Header","DeckForm","onSubmit","initialState","changeHandler","target","value","event","preventDefault","stopPropagation","htmlFor","required","placeholder","onChange","rows","DeckEdit","child","goBack","updateDeck","savedDeck","CardList","onCardDelete","DeckView","loadDeck","deleteCard","CardForm","onDone","deckName","doneButtonLabel","setCard","tabIndex","CardEdit","doneHandler","readCard","updateCard","CardCreate","createCard","DeckCreate","createDeck","Layout","path","exact","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.c451e8ff.chunk.js","sourcesContent":["/**\n * Defines the base URL for the API.\n * The default values is overridden by the `API_BASE_URL` environment variable.\n */\nconst API_BASE_URL = process.env.API_BASE_URL || \"http://localhost:5000\";\n\n/**\n * Defines the default headers for these functions to work with `json-server`\n */\nconst headers = new Headers();\nheaders.append(\"Content-Type\", \"application/json\");\n\n/**\n * Removes the `cards` property from the deck so it is not accidentally saved with the deck.\n *\n * This function is NOT exported because it is not needed outside of this file.\n *\n * @param deck\n *  the deck instance\n * @returns {*}\n *  a copy of the deck instance with the `cards` property removed.\n */\nfunction stripCards(deck) {\n  const { cards, ...deckWithoutCards } = deck;\n  return deckWithoutCards;\n}\n\n/**\n * Fetch `json` from the specified URL and handle error status codes and ignore `AbortError`s\n *\n * This function is NOT exported because it is not needed outside of this file.\n *\n * @param url\n *  the url for the request.\n * @param options\n *  any options for fetch\n * @param onCancel\n *  default value returned if the fetch is cancelled.\n * @returns {Promise<Error|any>}\n *  a promise that resolves to the `json` data or an error.\n *  If the response is not in the 200 - 399 range the promise is rejected.\n */\n\nasync function fetchJson(url, options, onCancel) {\n  try {\n    const response = await fetch(url, options);\n\n    if (response.status < 200 || response.status > 399) {\n      throw new Error(`${response.status} - ${response.statusText}`);\n    }\n\n    if (response.status === 204) {\n      return null;\n    }\n\n    return await response.json();\n\n  } catch (error) {\n    if (error.name !== \"AbortError\") {\n      console.error(error.stack);\n      throw error;\n    }\n    return Promise.resolve(onCancel);\n  }\n}\n\n/**\n * Retrieves all existing decks.\n * @returns {Promise<[deck]>}\n *  a promise that resolves to a possibly empty array of decks saved in the database.\n */\nexport async function listDecks(signal) {\n  const url = `${API_BASE_URL}/decks?_embed=cards`;\n  return await fetchJson(url, { signal }, []);\n}\n\n/**\n * Saves deck to the database (public/data/db.json).\n * There is no validation done on the deck object, any object will be saved.\n * @param deck\n *  the deck to save, which must not have an `id` property\n * @param signal\n *  optional AbortController.signal\n * @returns {Promise<deck>}\n *  a promise that resolves the saved deck, which will now have an `id` property.\n */\nexport async function createDeck(deck, signal) {\n  const url = `${API_BASE_URL}/decks`;\n  const options = {\n    method: \"POST\",\n    headers,\n    body: JSON.stringify(stripCards(deck)),\n    signal,\n  };\n  return await fetchJson(url, options, {});\n}\n\n/**\n * Retrieves the deck with the specified `deckId`\n * @param deckId\n *  the `id` property matching the desired deck.\n * @param signal\n *  optional AbortController.signal\n * @returns {Promise<any>}\n *  a promise that resolves to the saved deck.\n */\nexport async function readDeck(deckId, signal) {\n  const url = `${API_BASE_URL}/decks/${deckId}?_embed=cards`;\n  return await fetchJson(url, { signal }, {});\n}\n\n/**\n * Updates an existing deck\n * @param updatedDeck\n *  the deck to save, which must have an `id` property.\n * @param signal\n *  optional AbortController.signal\n * @returns {Promise<Error|*>}\n *  a promise that resolves to the updated deck.\n */\nexport async function updateDeck(updatedDeck, signal) {\n  const url = `${API_BASE_URL}/decks/${updatedDeck.id}?_embed=cards`;\n  const options = {\n    method: \"PUT\",\n    headers,\n    body: JSON.stringify(stripCards(updatedDeck)),\n    signal,\n  };\n  return await fetchJson(url, options, updatedDeck);\n}\n\n/**\n * Deletes the deck with the specified `deckId`.\n * @param deckId\n *  the id of the deck to delete\n * @param signal\n *  optional AbortController.signal\n * @returns {Promise<Error|*>}\n *  a promise that resolves to an empty object.\n */\nexport async function deleteDeck(deckId, signal) {\n  const url = `${API_BASE_URL}/decks/${deckId}`;\n  const options = { method: \"DELETE\", signal };\n  return await fetchJson(url, options);\n}\n\n/**\n * Retrieves all cards associated with the specified `deckId`.\n * @param deckId\n *  the id of the target deck\n * @param signal\n *  optional AbortController.signal\n * @returns {Promise<Error|*>}\n *  a promise that resolves to a possible empty array of cards.\n */\nexport async function listCards(deckId, signal) {\n  const url = `${API_BASE_URL}/cards?deckId=${deckId}`;\n  return await fetchJson(url, { signal }, []);\n}\n\n/**\n * Creates a new card associated with the specified `deckId`.\n * There is no validation that there is an existing deck with the specified `deckId`.\n * @param deckId\n *  the id of the target deck\n * @param card\n *  the card to create, which must not have an `id` property\n * @param signal\n *  optional AbortController.signal\n * @returns {Promise<Error|*>}\n *  a promise that resolves to the new card, which will have an `id` property.\n */\nexport async function createCard(deckId, card, signal) {\n  // There is a bug in json-server, if you post to /decks/:deckId/cards the associated deckId is a string\n  // and the card is not related to the deck because the data types of the ID's are different.\n  const url = `${API_BASE_URL}/cards`;\n  card.deckId = Number(deckId);\n  const options = {\n    method: \"POST\",\n    headers,\n    body: JSON.stringify(card),\n    signal,\n  };\n  return await fetchJson(url, options, card);\n}\n\n/**\n * Retrieves the card with the specified `cardId`\n * @param cardId\n *  the id of the target\n * @param signal\n *  optional AbortController.signal\n * @returns {Promise<Error|*>}\n *  a promise that resolves to the saved card.\n */\nexport async function readCard(cardId, signal) {\n  const url = `${API_BASE_URL}/cards/${cardId}`;\n  return await fetchJson(url, { signal }, {});\n}\n\n/**\n * Updates an existing deck\n * @param updatedCard\n *  the card to save, which must have an `id` property.\n * @param signal\n *  optional AbortController.signal\n * @returns {Promise<Error|*>}\n *  a promise that resolves to the updated card.\n */\nexport async function updateCard(updatedCard, signal) {\n  const url = `${API_BASE_URL}/cards/${updatedCard.id}`;\n  const options = {\n    method: \"PUT\",\n    headers,\n    body: JSON.stringify(updatedCard),\n  };\n  return await fetchJson(url, options, updatedCard);\n}\n\n/**\n * Deletes the card with the specified `cardId`.\n * @param cardId\n *  the id of the card to delete\n * @param signal\n *  optional AbortController.signal\n * @returns {Promise<Error|*>}\n *  a promise that resolves to an empty object.\n */\nexport async function deleteCard(cardId, signal) {\n  const url = `${API_BASE_URL}/cards/${cardId}`;\n  const options = { method: \"DELETE\", signal };\n  return await fetchJson(url, options);\n}\n","import React, { useEffect, useState } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { deleteDeck, listDecks } from \"../utils/api\";\r\n\r\nfunction DeckList() {\r\n\tconst [decks, setDecks] = useState([]);\r\n\r\n\tuseEffect(loadDecks, []);\r\n\tfunction deleteHandler(deckId) {\r\n\t\tconst confirmed = window.confirm(\r\n\t\t\t\"Delete this deck?\\n\\nYou will not be able to recover it.\",\r\n\t\t);\r\n\t\tif (confirmed) {\r\n\t\t\tdeleteDeck(deckId).then(loadDecks);\r\n\t\t}\r\n\t}\r\n\tfunction loadDecks() {\r\n\t\tlistDecks().then(setDecks);\r\n\t}\r\n\tconst list = decks.map((deck) => (\r\n\t\t<li\r\n\t\t\tkey={deck.id}\r\n\t\t\tclassName=\"list-group-item list-group-item-action flex-column align-items-start\"\r\n\t\t>\r\n\t\t\t<div className=\"d-flex w-100 justify-content-between\">\r\n\t\t\t\t<h5 className=\"mb-1\">{deck.name}</h5>\r\n\t\t\t\t<small>{deck.cards.length} cards</small>\r\n\t\t\t</div>\r\n\t\t\t<p className=\"mb-1\">{deck.description}</p>\r\n\t\t\t<Link\r\n\t\t\t\tto={`/decks/${deck.id}`}\r\n\t\t\t\tclassName=\"btn btn-secondary mr-2\"\r\n\t\t\t\ttitle=\"Edit deck\"\r\n\t\t\t>\r\n\t\t\t\t<span className=\"oi oi-eye\" /> View\r\n\t\t\t</Link>\r\n\t\t\t<Link\r\n\t\t\t\tto={`/decks/${deck.id}/study`}\r\n\t\t\t\tclassName=\"btn btn-primary\"\r\n\t\t\t\ttitle=\"Study deck\"\r\n\t\t\t>\r\n\t\t\t\t<span className=\"oi oi-book\" /> Study\r\n\t\t\t</Link>\r\n\t\t\t<button\r\n\t\t\t\tclassName=\"btn btn-danger float-right\"\r\n\t\t\t\ttitle=\"Delete deck\"\r\n\t\t\t\tonClick={() => deleteHandler(deck.id)}\r\n\t\t\t>\r\n\t\t\t\t<span className=\"oi oi-trash\" />\r\n\t\t\t</button>\r\n\t\t</li>\r\n\t));\r\n\r\n\treturn (\r\n\t\t<>\r\n\t\t\t<Link to=\"/decks/new\" className=\"btn btn-secondary\">\r\n\t\t\t\t<span className=\"oi oi-plus\" /> Create Deck\r\n\t\t\t</Link>\r\n\t\t\t<ul className=\"list-group mt-2 deck-list\">{list}</ul>\r\n\t\t</>\r\n\t);\r\n}\r\n\r\nexport default DeckList;\r\n","import React from \"react\";\r\nimport DeckList from \"../../Deck/List\"\r\n\r\nfunction Home() {\r\n\treturn (\r\n\t  <div className=\"Home container\">\r\n\t\t<DeckList />\r\n\t  </div>\r\n\t);\r\n}\r\nexport default Home;","import React, { useEffect, useState } from \"react\";\r\n\r\nconst nextView = {\r\n\tfront: \"back\",\r\n\tback: \"front\",\r\n};\r\n\r\nfunction StudyCard({ card = {}, title, children }) {\r\n\tconst [view, setView] = useState(\"front\");\r\n\tconst [flipped, setFlipped] = useState(false);\r\n\r\n\tfunction flipHandler() {\r\n\t\tsetView((prevState) => nextView[prevState]);\r\n\t\tsetFlipped(true);\r\n\t}\r\n\r\n\tuseEffect(() => {\r\n\t\tsetView(\"front\");\r\n\t\tsetFlipped(false);\r\n\t}, [card]);\r\n\r\n\treturn (\r\n\t\t<div className={`card ${view} study-card`}>\r\n\t\t\t<div className=\"card-body\">\r\n\t\t\t\t<h5 className=\"card-title\">{title}</h5>\r\n\t\t\t\t<p className=\"card-text\">{card[view]}</p>\r\n\t\t\t\t<button\r\n\t\t\t\t\ttype=\"button\"\r\n\t\t\t\t\tclassName=\"btn btn-secondary mr-2\"\r\n\t\t\t\t\tonClick={flipHandler}\r\n\t\t\t\t>\r\n\t\t\t\t\tFlip\r\n\t\t\t\t</button>\r\n\t\t\t\t{flipped && children}\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t);\r\n}\r\n\r\nexport default StudyCard;\r\n","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nfunction StudyPage({ deckId, name, children }) {\r\n\treturn (\r\n\t\t<main className=\"container study-page\">\r\n\t\t\t<nav aria-label=\"breadcrumb\">\r\n\t\t\t\t<ol className=\"breadcrumb\">\r\n\t\t\t\t\t<li className=\"breadcrumb-item\">\r\n\t\t\t\t\t\t<Link to=\"/\">\r\n\t\t\t\t\t\t\t<span className=\"oi oi-home\" /> Home\r\n\t\t\t\t\t\t</Link>\r\n\t\t\t\t\t</li>\r\n\t\t\t\t\t<li className=\"breadcrumb-item\">\r\n\t\t\t\t\t\t<Link to={`/decks/${deckId}`}>{name}</Link>\r\n\t\t\t\t\t</li>\r\n\t\t\t\t\t<li className=\"breadcrumb-item active\" aria-current=\"page\">\r\n\t\t\t\t\t\tStudy\r\n\t\t\t\t\t</li>\r\n\t\t\t\t</ol>\r\n\t\t\t</nav>\r\n\t\t\t<h1>{name}: Study</h1>\r\n\t\t\t{children}\r\n\t\t</main>\r\n\t);\r\n}\r\n\r\nexport default StudyPage;\r\n","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nfunction StudyNotEnoughCards({ deckId, cardCount }) {\r\n\treturn (\r\n\t\t<>\r\n\t\t\t<h2>Not enough cards.</h2>\r\n\t\t\t<p>\r\n\t\t\t\tYou need at least 3 cards to study. There are {cardCount} cards in this\r\n\t\t\t\tdeck.\r\n\t\t\t</p>\r\n\t\t\t<Link to={`/decks/${deckId}/cards/new`} className=\"btn btn-primary\">\r\n\t\t\t\t<span className=\"oi oi-plus\" /> Add Cards\r\n\t\t\t</Link>\r\n\t\t</>\r\n\t);\r\n}\r\n\r\nexport default StudyNotEnoughCards;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { useParams, useHistory } from \"react-router-dom\";\r\nimport { readDeck } from \"../../utils/api\";\r\nimport StudyCard from \"./StudyCard\";\r\nimport StudyPage from \"./StudyPage\";\r\nimport StudyNotEnoughCards from \"./StudyNotEnoughCards\";\r\n\r\nfunction Study() {\r\n\tconst { deckId } = useParams();\r\n\tconst [deck, setDeck] = useState({ name: \"Loading...\", cards: [] });\r\n\tconst [cardNumber, setCardNumber] = useState(1);\r\n\tconst history = useHistory();\r\n\r\n\tuseEffect(() => {\r\n\t\treadDeck(deckId).then(setDeck);\r\n\t}, [deckId]);\r\n\r\n\tconst cardCount = deck.cards.length;\r\n\tconst nextHandler = () => {\r\n\t\tif (cardNumber === cardCount) {\r\n\t\t\tconst returnToHomePage = !window.confirm(\r\n\t\t\t\t\"Restart cards?\\n\\nClick 'cancel' to return to the home page.\",\r\n\t\t\t);\r\n\t\t\treturn returnToHomePage ? history.push(\"/\") : setCardNumber(1);\r\n\t\t}\r\n\t\tsetCardNumber((prevState) => Math.min(cardCount, prevState + 1));\r\n\t};\r\n\r\n\tconst cardTitle = `Card ${cardNumber} of ${cardCount}`;\r\n\tconst card = deck.cards[cardNumber - 1];\r\n\tif (cardCount <= 2) {\r\n\t\treturn (\r\n\t\t\t<StudyPage name={deck.name} deckId={deckId}>\r\n\t\t\t\t<StudyNotEnoughCards deckId={deckId} cardCount={cardCount} />\r\n\t\t\t</StudyPage>\r\n\t\t);\r\n\t}\r\n\r\n\treturn (\r\n\t\t<StudyPage name={deck.name} deckId={deckId}>\r\n\t\t\t<StudyCard card={card} title={cardTitle}>\r\n\t\t\t\t<button type=\"button\" className=\"btn btn-primary\" onClick={nextHandler}>\r\n\t\t\t\t\tNext\r\n\t\t\t\t</button>\r\n\t\t\t</StudyCard>\r\n\t\t</StudyPage>\r\n\t);\r\n}\r\n\r\nexport default Study;\r\n","import React from \"react\";\n\nfunction NotFound() {\n  return (\n    <div className=\"NotFound\">\n      <h1>Not Found</h1>\n    </div>\n  );\n}\nexport default NotFound;","import React from \"react\";\n\nfunction Header() {\n  return (\n    <header className=\"jumbotron bg-dark\">\n      <div className=\"container text-white\">\n        <h1 className=\"display-4\">Flashcard-o-matic</h1>\n        <p className=\"lead\">Discover The Flashcard Difference.</p>\n      </div>\n    </header>\n  );\n}\nexport default Header;","import React, { useState } from \"react\";\r\n\r\nfunction DeckForm({\r\n\tonSubmit,\r\n\tonCancel,\r\n\tinitialState = { name: \"\", description: \"\" },\r\n}) {\r\n\tconst [deck, setDeck] = useState(initialState);\r\n\r\n\tfunction changeHandler({ target: { name, value } }) {\r\n\t\tsetDeck((prevState) => ({\r\n\t\t\t...prevState,\r\n\t\t\t[name]: value,\r\n\t\t}));\r\n\t}\r\n\r\n\tfunction submitHandler(event) {\r\n\t\tevent.preventDefault(); //It stops the browsers default behaviour (like a href event on a link).\r\n\t\tevent.stopPropagation(); //It prevents the event from propagating (or “bubbling up”) the DOM.\r\n\t\tonSubmit(deck);\r\n\t}\r\n\t\r\n\treturn (\r\n\t\t<>\r\n\t\t\t<form onSubmit={submitHandler} className=\"deck-edit\">\r\n\t\t\t\t<fieldset>\r\n\t\t\t\t\t<div className=\"form-group\">\r\n\t\t\t\t\t\t<label htmlFor=\"name\">Name</label>\r\n\t\t\t\t\t\t<input\r\n\t\t\t\t\t\t\ttype=\"text\"\r\n\t\t\t\t\t\t\tid=\"name\"\r\n\t\t\t\t\t\t\tname=\"name\"\r\n\t\t\t\t\t\t\tclassName=\"form-control\"\r\n\t\t\t\t\t\t\tvalue={deck.name}\r\n\t\t\t\t\t\t\trequired={true}\r\n\t\t\t\t\t\t\tplaceholder=\"Deck Name\"\r\n\t\t\t\t\t\t\tonChange={changeHandler}\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<div className=\"form-group\">\r\n\t\t\t\t\t\t<label htmlFor=\"description\">Description</label>\r\n\t\t\t\t\t\t<textarea\r\n\t\t\t\t\t\t\tid=\"description\"\r\n\t\t\t\t\t\t\tname=\"description\"\r\n\t\t\t\t\t\t\tclassName=\"form-control\"\r\n\t\t\t\t\t\t\trows=\"4\"\r\n\t\t\t\t\t\t\trequired={true}\r\n\t\t\t\t\t\t\tplaceholder=\"Brief description of the deck\"\r\n\t\t\t\t\t\t\tvalue={deck.description}\r\n\t\t\t\t\t\t\tonChange={changeHandler}\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<button\r\n\t\t\t\t\t\ttype=\"button\"\r\n\t\t\t\t\t\tclassName=\"btn btn-secondary mr-2\"\r\n\t\t\t\t\t\tonClick={onCancel}\r\n\t\t\t\t\t>\r\n\t\t\t\t\t\tCancel\r\n\t\t\t\t\t</button>\r\n\t\t\t\t\t<button type=\"submit\" className=\"btn btn-primary\">\r\n\t\t\t\t\t\tSubmit\r\n\t\t\t\t\t</button>\r\n\t\t\t\t</fieldset>\r\n\t\t\t</form>\r\n\t\t</>\r\n\t);\r\n}\r\n\r\nexport default DeckForm;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { Link, useHistory, useParams } from \"react-router-dom\";\r\nimport { readDeck, updateDeck } from \"../utils/api\";\r\nimport DeckForm from \"./Form\";\r\n\r\nfunction DeckEdit() {\r\n\tconst history = useHistory();\r\n\tconst { deckId } = useParams();\r\n\tconst [deck, setDeck] = useState({ name: \"\", description: \"\" });\r\n\r\n\tuseEffect(() => {\r\n\t\treadDeck(deckId).then(setDeck);\r\n\t}, [deckId]);\r\n\r\n\tfunction submitHandler(updatedDeck) {\r\n\t\tupdateDeck(updatedDeck).then((savedDeck) =>\r\n\t\t\thistory.push(`/decks/${savedDeck.id}`),\r\n\t\t);\r\n\t}\r\n\r\n\tfunction cancel() {\r\n\t\thistory.goBack();\r\n\t}\r\n\r\n\tconst child = deck.id ? (\r\n\t\t<DeckForm onCancel={cancel} onSubmit={submitHandler} initialState={deck} />\r\n\t) : (\r\n\t\t<p>Loading...</p>\r\n\t);\r\n\r\n\treturn (\r\n\t\t<>\r\n\t\t\t<nav aria-label=\"breadcrumb\">\r\n\t\t\t\t<ol className=\"breadcrumb\">\r\n\t\t\t\t\t<li className=\"breadcrumb-item\">\r\n\t\t\t\t\t\t<Link to=\"/\">\r\n\t\t\t\t\t\t\t<span className=\"oi oi-home\" /> Home\r\n\t\t\t\t\t\t</Link>\r\n\t\t\t\t\t</li>\r\n\t\t\t\t\t<li className=\"breadcrumb-item\">\r\n\t\t\t\t\t\t<Link to={`/decks/${deckId}`}>{deck.name}</Link>\r\n\t\t\t\t\t</li>\r\n\t\t\t\t\t<li className=\"breadcrumb-item active\" aria-current=\"page\">\r\n\t\t\t\t\t\tEdit Deck\r\n\t\t\t\t\t</li>\r\n\t\t\t\t</ol>\r\n\t\t\t</nav>\r\n\t\t\t<h1>Edit Deck</h1>\r\n\t\t\t{child}\r\n\t\t</>\r\n\t);\r\n}\r\n\r\nexport default DeckEdit;\r\n","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nfunction CardList({ deck, onCardDelete }) {\r\n\tconst { cards = [] } = deck;\r\n\tconst list = cards.map((card) => (\r\n\t\t<li\r\n\t\t\tkey={card.id}\r\n\t\t\tclassName=\"list-group-item list-group-item-action flex-column align-items-start\"\r\n\t\t>\r\n\t\t\t<div className=\"row\">\r\n\t\t\t\t<div className=\"col-md-10\">\r\n\t\t\t\t\t<div className=\"row\">\r\n\t\t\t\t\t\t<div className=\"col\">{card.front}</div>\r\n\t\t\t\t\t\t<div className=\"col\">{card.back}</div>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className=\"col text-right\">\r\n\t\t\t\t\t<Link\r\n\t\t\t\t\t\tto={`/decks/${deck.id}/cards/${card.id}/edit`}\r\n\t\t\t\t\t\tclassName=\"btn btn-secondary mr-2\"\r\n\t\t\t\t\t\ttitle=\"Edit Card\"\r\n\t\t\t\t\t>\r\n\t\t\t\t\t\t<span className=\"oi oi-pencil\" /> Edit\r\n\t\t\t\t\t</Link>\r\n\t\t\t\t\t<button className=\"btn btn-danger\" title=\"Delete Card\">\r\n\t\t\t\t\t\t<span\r\n\t\t\t\t\t\t\tclassName=\"oi oi-trash\"\r\n\t\t\t\t\t\t\tonClick={() => onCardDelete(card.id)}\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t</button>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t</li>\r\n\t));\r\n\treturn (\r\n\t\t<div className=\"mt-4 card-list\">\r\n\t\t\t<h3>Cards</h3>\r\n\t\t\t<ul className=\"list-group\">{list}</ul>\r\n\t\t</div>\r\n\t);\r\n}\r\nexport default CardList;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { Link, useHistory, useParams } from \"react-router-dom\";\r\nimport { deleteCard, deleteDeck, readDeck } from \"../utils/api\";\r\nimport CardList from \"../Card/List\";\r\n\r\nfunction DeckView() {\r\n\tconst history = useHistory();\r\n\tconst { deckId } = useParams();\r\n\tconst [deck, setDeck] = useState({ cards: [] });\r\n\r\n\tuseEffect(loadDeck, [deckId]);\r\n\tfunction loadDeck() {\r\n\t\treadDeck(deckId).then(setDeck);\r\n\t}\r\n\r\n\tfunction handleDelete() {\r\n\t\tconst confirmed = window.confirm(\r\n\t\t\t\"Delete this deck?\\n\\nYou will not be able to recover it.\",\r\n\t\t);\r\n\t\tif (confirmed) {\r\n\t\t\tdeleteDeck(deck.id).then(() => history.push(\"/decks\"));\r\n\t\t}\r\n\t}\r\n\r\n\tfunction deleteCardHandler(cardId) {\r\n\t\tconst confirmed = window.confirm(\r\n\t\t\t\"Delete this card?\\n\\nYou will not be able to recover it.\",\r\n\t\t);\r\n\t\tif (confirmed) {\r\n\t\t\tdeleteCard(cardId).then(loadDeck);\r\n\t\t}\r\n\t}\r\n\r\n\treturn (\r\n\t\t<main className=\"container deck-view\">\r\n\t\t\t<nav aria-label=\"breadcrumb\">\r\n\t\t\t\t<ol className=\"breadcrumb\">\r\n\t\t\t\t\t<li className=\"breadcrumb-item\">\r\n\t\t\t\t\t\t<Link to=\"/\">\r\n\t\t\t\t\t\t\t<span className=\"oi oi-home\" /> Home\r\n\t\t\t\t\t\t</Link>\r\n\t\t\t\t\t</li>\r\n\t\t\t\t\t<li className=\"breadcrumb-item active\" aria-current=\"page\">\r\n\t\t\t\t\t\t{deck.name}\r\n\t\t\t\t\t</li>\r\n\t\t\t\t</ol>\r\n\t\t\t</nav>\r\n\t\t\t<div className=\"media mb-2\">\r\n\t\t\t\t<div className=\"media-body\">\r\n\t\t\t\t\t<h5 className=\"mt-0\">{deck.name}</h5>\r\n\t\t\t\t\t{deck.description}\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t\t<Link\r\n\t\t\t\tto={`/decks/${deck.id}/edit`}\r\n\t\t\t\tclassName=\"btn btn-secondary mr-2\"\r\n\t\t\t\ttitle=\"Edit deck\"\r\n\t\t\t>\r\n\t\t\t\t<span className=\"oi oi-pencil\" /> Edit\r\n\t\t\t</Link>\r\n\t\t\t<Link\r\n\t\t\t\tto={`/decks/${deck.id}/study`}\r\n\t\t\t\tclassName=\"btn btn-primary mr-2\"\r\n\t\t\t\ttitle=\"Study deck\"\r\n\t\t\t>\r\n\t\t\t\t<span className=\"oi oi-book\" /> Study\r\n\t\t\t</Link>\r\n\t\t\t<Link\r\n\t\t\t\tto={`/decks/${deck.id}/cards/new`}\r\n\t\t\t\tclassName=\"btn btn-primary\"\r\n\t\t\t\ttitle=\"Add Card\"\r\n\t\t\t>\r\n\t\t\t\t<span className=\"oi oi-plus\" /> Add Cards\r\n\t\t\t</Link>\r\n\t\t\t<button className=\"btn btn-danger float-right\" title=\"Delete deck\">\r\n\t\t\t\t<span className=\"oi oi-trash\" onClick={handleDelete} />\r\n\t\t\t</button>\r\n\t\t\t<CardList deck={deck} onCardDelete={deleteCardHandler} />\r\n\t\t</main>\r\n\t);\r\n}\r\n\r\nexport default DeckView;\r\n","import React, { useState } from \"react\";\r\n\r\nfunction CardForm({\r\n\tonSubmit,\r\n\tonDone,\r\n\tdeckName = \"Loading...\",\r\n\tinitialState,\r\n\tdoneButtonLabel = \"Done\",\r\n}) {\r\n\tconst [card, setCard] = useState(initialState);\r\n\tfunction changeHandler({ target: { name, value } }) {\r\n\t\tsetCard((prevState) => ({\r\n\t\t\t...prevState,\r\n\t\t\t[name]: value,\r\n\t\t}));\r\n\t}\r\n\r\n\tfunction submitHandler(event) {\r\n\t\tevent.preventDefault();\r\n\t\tevent.stopPropagation();\r\n\t\tonSubmit({ ...card });\r\n\t\tsetCard({ front: \"\", back: \"\" });\r\n\t}\r\n\r\n\treturn (\r\n\t\t<form onSubmit={submitHandler} className=\"card-form\">\r\n\t\t\t<fieldset>\r\n\t\t\t\t<legend>{deckName}: Add Card</legend>\r\n\r\n\t\t\t\t<div className=\"form-group\">\r\n\t\t\t\t\t<label htmlFor=\"front\">Front</label>\r\n\t\t\t\t\t<textarea\r\n\t\t\t\t\t\tid=\"front\"\r\n\t\t\t\t\t\tname=\"front\"\r\n\t\t\t\t\t\ttabIndex=\"1\"\r\n\t\t\t\t\t\tclassName=\"form-control\"\r\n\t\t\t\t\t\trequired={true}\r\n\t\t\t\t\t\tplaceholder=\"Front side of card\"\r\n\t\t\t\t\t\tvalue={card.front}\r\n\t\t\t\t\t\tonChange={changeHandler}\r\n\t\t\t\t\t/>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className=\"form-group\">\r\n\t\t\t\t\t<label htmlFor=\"back\">Back</label>\r\n\t\t\t\t\t<textarea\r\n\t\t\t\t\t\tid=\"back\"\r\n\t\t\t\t\t\tname=\"back\"\r\n\t\t\t\t\t\ttabIndex=\"2\"\r\n\t\t\t\t\t\tclassName=\"form-control\"\r\n\t\t\t\t\t\trequired={true}\r\n\t\t\t\t\t\tplaceholder=\"Back side of card\"\r\n\t\t\t\t\t\tvalue={card.back}\r\n\t\t\t\t\t\tonChange={changeHandler}\r\n\t\t\t\t\t/>\r\n\t\t\t\t</div>\r\n\r\n\t\t\t\t<button\r\n\t\t\t\t\tclassName=\"btn btn-secondary mr-2\"\r\n\t\t\t\t\tonClick={onDone}\r\n\t\t\t\t\ttabIndex=\"4\"\r\n\t\t\t\t>\r\n\t\t\t\t\t{doneButtonLabel}\r\n\t\t\t\t</button>\r\n\t\t\t\t<button type=\"submit\" className=\"btn btn-primary\" tabIndex=\"3\">\r\n\t\t\t\t\tSave\r\n\t\t\t\t</button>\r\n\t\t\t</fieldset>\r\n\t\t</form>\r\n\t);\r\n}\r\n\r\nexport default CardForm;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { Link, useHistory, useParams } from \"react-router-dom\";\r\nimport { readCard, readDeck, updateCard } from \"../utils/api\";\r\nimport CardForm from \"./Form\";\r\n\r\nfunction CardEdit({ title }) {\r\n\tconst history = useHistory();\r\n\tconst { deckId, cardId } = useParams();\r\n\tconst [card, setCard] = useState({ front: \"\", back: \"\" });\r\n\tconst [deck, setDeck] = useState({ cards: [] });\r\n\r\n\tuseEffect(() => {\r\n\t\treadDeck(deckId).then(setDeck);\r\n\t\treadCard(cardId).then(setCard);\r\n\t}, [deckId, cardId]);\r\n\r\n\tfunction submitHandler(card) {\r\n\t\tupdateCard(card).then(doneHandler);\r\n\t}\r\n\r\n\tfunction doneHandler() {\r\n\t\thistory.push(`/decks/${deck.id}`);\r\n\t}\r\n\r\n\tconst child = card.id ? (\r\n\t\t<CardForm\r\n\t\t\tonSubmit={submitHandler}\r\n\t\t\tonDone={doneHandler}\r\n\t\t\tdeckName={deck.name}\r\n\t\t\tinitialState={card}\r\n\t\t\tdoneButtonLabel=\"Cancel\"\r\n\t\t/>\r\n\t) : (\r\n\t\t<p>Loading...</p>\r\n\t);\r\n\treturn (\r\n\t\t<>\r\n\t\t\t<nav aria-label=\"breadcrumb\">\r\n\t\t\t\t<ol className=\"breadcrumb\">\r\n\t\t\t\t\t<li className=\"breadcrumb-item\">\r\n\t\t\t\t\t\t<Link to=\"/\">\r\n\t\t\t\t\t\t\t<span className=\"oi oi-home\" /> Home\r\n\t\t\t\t\t\t</Link>\r\n\t\t\t\t\t</li>\r\n\t\t\t\t\t<li className=\"breadcrumb-item\">\r\n\t\t\t\t\t\t<Link to={`/decks/${deckId}`}>Deck {deck.name}</Link>\r\n\t\t\t\t\t</li>\r\n\t\t\t\t\t<li className=\"breadcrumb-item active\" aria-current=\"page\">\r\n\t\t\t\t\t\tEdit Card {cardId}\r\n\t\t\t\t\t</li>\r\n\t\t\t\t</ol>\r\n\t\t\t</nav>\r\n\t\t\t<h2>Edit Card</h2>\r\n\t\t\t{child}\r\n\t\t</>\r\n\t);\r\n}\r\nexport default CardEdit;\r\n","import React, { useEffect, useState } from \"react\";\nimport { Link, useHistory, useParams } from \"react-router-dom\";\nimport { createCard, readDeck } from \"../utils/api\";\nimport CardForm from \"./Form\";\n\nfunction CardCreate() {\n\tconst history = useHistory();\n\tconst { deckId } = useParams();\n\tconst [deck, setDeck] = useState({ cards: [] });\n\n\tuseEffect(() => {\n\t\treadDeck(deckId).then(setDeck);\n\t}, [deckId]);\n\n\tfunction submitHandler(card) {\n\t\tcreateCard(deckId, card);\n\t}\n\n\tfunction doneHandler() {\n\t\thistory.push(`/decks/${deckId}`);\n\t}\n\treturn (\n\t\t<>\n\t\t\t<nav aria-label=\"breadcrumb\">\n\t\t\t\t<ol className=\"breadcrumb\">\n\t\t\t\t\t<li className=\"breadcrumb-item\">\n\t\t\t\t\t\t<Link to=\"/\">\n\t\t\t\t\t\t\t<span className=\"oi oi-home\" /> Home\n\t\t\t\t\t\t</Link>\n\t\t\t\t\t</li>\n\t\t\t\t\t<li className=\"breadcrumb-item\">\n\t\t\t\t\t\t<Link to={`/decks/${deckId}`}>{deck.name}</Link>\n\t\t\t\t\t</li>\n\t\t\t\t\t<li className=\"breadcrumb-item active\" aria-current=\"page\">\n\t\t\t\t\t\tAdd Card\n\t\t\t\t\t</li>\n\t\t\t\t</ol>\n\t\t\t</nav>\n\t\t\t<CardForm\n\t\t\t\tdeckName={deck.name}\n\t\t\t\tinitialState={deck}\n\t\t\t\tonSubmit={submitHandler}\n\t\t\t\tonDone={doneHandler}\n\t\t\t/>\n\t\t</>\n\t);\n}\n\nexport default CardCreate;\n","import React from \"react\";\r\nimport { Link, useHistory } from \"react-router-dom\";\r\nimport { createDeck } from \"../utils/api\";\r\nimport DeckForm from \"./Form\";\r\n\r\nfunction DeckCreate() {\r\n\tconst history = useHistory();\r\n\t\r\n\tfunction submitHandler(deck) {\r\n\t\tcreateDeck(deck).then((savedDeck) =>\r\n\t\t\thistory.push(`/decks/${savedDeck.id}`),\r\n\t\t);\r\n\t}\r\n\r\n\tfunction cancel() {\r\n\t\thistory.goBack();\r\n\t}\r\n\treturn (\r\n\t\t<>\r\n\t\t\t<nav aria-label=\"breadcrumb\">\r\n\t\t\t\t<ol className=\"breadcrumb\">\r\n\t\t\t\t\t<li className=\"breadcrumb-item\">\r\n\t\t\t\t\t\t<Link to=\"/\">\r\n\t\t\t\t\t\t\t<span className=\"oi oi-home\" /> Home\r\n\t\t\t\t\t\t</Link>\r\n\t\t\t\t\t</li>\r\n\t\t\t\t\t<li className=\"breadcrumb-item active\" aria-current=\"page\">\r\n\t\t\t\t\t\tCreate Deck\r\n\t\t\t\t\t</li>\r\n\t\t\t\t</ol>\r\n\t\t\t</nav>\r\n\t\t\t<h1>Create Deck</h1>\r\n\t\t\t<DeckForm onCancel={cancel} onSubmit={submitHandler} />\r\n\t\t</>\r\n\t);\r\n}\r\nexport default DeckCreate;\r\n","import React from \"react\";\r\nimport {Redirect, Switch, Route} from \"react-router-dom\";\r\n\r\nimport Home from \"./Home\";\r\nimport Study from \"../Deck/Study/Index\";\r\nimport NotFound from \"./NotFound\";\r\nimport Header from \"./Header\";\r\nimport DeckEdit from \"../Deck/Edit\";\r\nimport DeckView from \"../Deck/View\";\r\nimport CardEdit from \"../Card/Edit\";\r\nimport CardCreate from \"../Card/Create\";\r\nimport DeckCreate from \"../Deck/Create\";\r\n\r\n\r\nfunction Layout() {\r\n  return (\r\n    <div>\r\n      <Header />\r\n      <div className=\"container\">\r\n        {/* TODO: Implement the screen starting here */}\r\n        <Switch>\r\n          <Route path=\"/decks/new\">\r\n            <DeckCreate />\r\n          </Route>\r\n          <Route path=\"/decks/:deckId/study\">\r\n            <Study />\r\n          </Route>\r\n          <Route path=\"/decks/:deckId/edit\">\r\n            <DeckEdit />\r\n          </Route>\r\n          <Route path=\"/decks/:deckId/cards/new\">\r\n            <CardCreate />\r\n          </Route>\r\n          <Route path=\"/decks/:deckId/cards/:cardId/edit\">\r\n            <CardEdit />\r\n          </Route>\r\n          <Route exact path=\"/decks/:deckId\">\r\n            <DeckView />\r\n          </Route>\r\n          <Route exact path=\"/decks\">\r\n            <Redirect to=\"/\"/> \r\n          </Route>\r\n          <Route exact path=\"/\">\r\n            <Home />\r\n          </Route>\r\n          <Route>\r\n            <NotFound /> \r\n          </Route>\r\n        </Switch>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\nexport default Layout;","import React from \"react\";\nimport { Route, Switch } from \"react-router-dom\";\nimport Layout from \"./Layout\";\n\n/**\n * App is a wrapper for <Layout>, you should not need to change this file.\n */\n\nfunction App() {\n  return (\n    <div className=\"app-routes\">\n      <Switch>\n        <Route path=\"/\">\n          <Layout />\n        </Route>\n      </Switch>\n    </div>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport { BrowserRouter as Router } from \"react-router-dom\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <Router>\n      <App />\n    </Router>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}